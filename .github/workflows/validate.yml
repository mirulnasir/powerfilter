name: Validate

on: [push, pull_request]

jobs:
  skip_check:
    name: Check concurrent runs
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip}}
    steps:
      - uses: fkirc/skip-duplicate-actions@v5
        id: skip_check
        with:
          concurrent_skipping: same_content_newer
          cancel_other: true
          skip_after_successful_duplicate: false
  test:
    name: Lint & Test
    needs: skip_check
    if: needs.skip_check.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    env:
      CI: true
    timeout-minutes: 30
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - id: pnpm-setup
        uses: pnpm/action-setup@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: package.json

      - name: Install Deps
        run: pnpm install --frozen-lockfile
      
      - name: Check Nextjs Cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint
